- Load graph from file

- Build a query node from search input (this is now the root of our search graph)
- Annotate query node with terms, dbpedia entities

- Perform a matching function  against the root node of main data graph

- Traverse the main data graph appropriately, performing the above scoring function against child nodes
    - From the root, traverse all 98 sub modes. From then on, only traverse nodes that fall in top 50%

- For each result, build up the search graph, with scores

- Collect all leaf scores
    - When we get to leaves, add eligible leaf node to a stack.

- Final search result is to order/rank the list of final leaf nodes





